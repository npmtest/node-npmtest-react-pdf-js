{"/home/travis/build/npmtest/node-npmtest-react-pdf-js/test.js":"/* istanbul instrument in package npmtest_react_pdf_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-pdf-js/lib.npmtest_react_pdf_js.js":"/* istanbul instrument in package npmtest_react_pdf_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_pdf_js = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_pdf_js = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-pdf-js/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-pdf-js && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_pdf_js */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_pdf_js\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_pdf_js.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_pdf_js.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_pdf_js.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_pdf_js.__dirname + '/lib.npmtest_react_pdf_js.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-pdf-js/node_modules/react-pdf-js/lib/index.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Pdf = require('./Pdf');\n\nvar _Pdf2 = _interopRequireDefault(_Pdf);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Pdf2.default;","/home/travis/build/npmtest/node-npmtest-react-pdf-js/node_modules/react-pdf-js/lib/Pdf.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _promise = require('babel-runtime/core-js/promise');\n\nvar _promise2 = _interopRequireDefault(_promise);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nrequire('pdfjs-dist/build/pdf.combined');\nrequire('pdfjs-dist/web/compatibility');\n\nvar makeCancelable = function makeCancelable(promise) {\n  var hasCanceled = false;\n\n  var wrappedPromise = new _promise2.default(function (resolve, reject) {\n    promise.then(function (val) {\n      return hasCanceled ? reject({ pdf: val, isCanceled: true }) : resolve(val);\n    });\n    promise.catch(function (error) {\n      return hasCanceled ? reject({ isCanceled: true }) : reject(error);\n    });\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel: function cancel() {\n      hasCanceled = true;\n    }\n  };\n};\n\nvar Pdf = function (_React$Component) {\n  (0, _inherits3.default)(Pdf, _React$Component);\n  (0, _createClass3.default)(Pdf, null, [{\n    key: 'onDocumentError',\n    value: function onDocumentError(err) {\n      if (err.isCanceled && err.pdf) {\n        err.pdf.destroy();\n      }\n    }\n\n    // Converts an ArrayBuffer directly to base64, without any intermediate 'convert to string then\n    // use window.btoa' step and without risking a blow of the stack. According to [Jon Leightons's]\n    // tests, this appears to be a faster approach: http://jsperf.com/encoding-xhr-image-data/5\n    // Jon Leighton https://gist.github.com/jonleighton/958841\n\n  }, {\n    key: 'defaultBinaryToBase64',\n    value: function defaultBinaryToBase64(arrayBuffer) {\n      var base64 = '';\n      var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n      var bytes = new Uint8Array(arrayBuffer);\n      var byteLength = bytes.byteLength;\n      var byteRemainder = byteLength % 3;\n      var mainLength = byteLength - byteRemainder;\n\n      var a = void 0;\n      var b = void 0;\n      var c = void 0;\n      var d = void 0;\n      var chunk = void 0;\n\n      // Main loop deals with bytes in chunks of 3\n      for (var i = 0; i < mainLength; i += 3) {\n        // Combine the three bytes into a single integer\n        chunk = bytes[i] << 16 | bytes[i + 1] << 8 | bytes[i + 2];\n\n        // Use bitmasks to extract 6-bit segments from the triplet\n        a = (chunk & 16515072) >> 18; // 16515072 = (2^6 - 1) << 18\n        b = (chunk & 258048) >> 12; // 258048   = (2^6 - 1) << 12\n        c = (chunk & 4032) >> 6; // 4032     = (2^6 - 1) << 6\n        d = chunk & 63; // 63       = 2^6 - 1\n\n        // Convert the raw binary segments to the appropriate ASCII encoding\n        base64 = [base64, encodings[a], encodings[b], encodings[c], encodings[d]].join('');\n      }\n\n      // Deal with the remaining bytes and padding\n      if (byteRemainder === 1) {\n        chunk = bytes[mainLength];\n\n        a = (chunk & 252) >> 2; // 252 = (2^6 - 1) << 2\n\n        // Set the 4 least significant bits to zero\n        b = (chunk & 3) << 4; // 3   = 2^2 - 1\n\n        base64 = [base64, encodings[a], encodings[b], '=='].join('');\n      } else if (byteRemainder === 2) {\n        chunk = bytes[mainLength] << 8 | bytes[mainLength + 1];\n\n        a = (chunk & 64512) >> 10; // 64512 = (2^6 - 1) << 10\n        b = (chunk & 1008) >> 4; // 1008  = (2^6 - 1) << 4\n\n        // Set the 2 least significant bits to zero\n        c = (chunk & 15) << 2; // 15    = 2^4 - 1\n\n        base64 = [base64, encodings[a], encodings[b], encodings[c], '='].join('');\n      }\n\n      return base64;\n    }\n  }]);\n\n  function Pdf(props) {\n    (0, _classCallCheck3.default)(this, Pdf);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Pdf.__proto__ || (0, _getPrototypeOf2.default)(Pdf)).call(this, props));\n\n    _this.state = {};\n    _this.onGetPdfRaw = _this.onGetPdfRaw.bind(_this);\n\n    if (!(typeof _this.onGetPdfRaw === 'function')) {\n      throw new TypeError('Value of \"this.onGetPdfRaw\" violates contract.\\n\\nExpected:\\n(any) => any\\n\\nGot:\\n' + _inspect(_this.onGetPdfRaw));\n    }\n\n    _this.onDocumentComplete = _this.onDocumentComplete.bind(_this);\n\n    if (!(typeof _this.onDocumentComplete === 'function')) {\n      throw new TypeError('Value of \"this.onDocumentComplete\" violates contract.\\n\\nExpected:\\n(any) => any\\n\\nGot:\\n' + _inspect(_this.onDocumentComplete));\n    }\n\n    _this.onPageComplete = _this.onPageComplete.bind(_this);\n\n    if (!(typeof _this.onPageComplete === 'function')) {\n      throw new TypeError('Value of \"this.onPageComplete\" violates contract.\\n\\nExpected:\\n(any) => any\\n\\nGot:\\n' + _inspect(_this.onPageComplete));\n    }\n\n    _this.getDocument = _this.getDocument.bind(_this);\n\n    if (!(typeof _this.getDocument === 'function')) {\n      throw new TypeError('Value of \"this.getDocument\" violates contract.\\n\\nExpected:\\n(any) => any\\n\\nGot:\\n' + _inspect(_this.getDocument));\n    }\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(Pdf, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.loadPDFDocument(this.props);\n      this.renderPdf();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      var pdf = this.state.pdf;\n\n\n      var newDocInit = newProps.documentInitParameters;\n      var docInit = this.props.documentInitParameters;\n\n      // Only reload if the most significant source has changed!\n      var newSource = newProps.file;\n      var oldSource = newSource ? this.props.file : null;\n      newSource = newSource || newProps.binaryContent;\n      oldSource = newSource && !oldSource ? this.props.binaryContent : oldSource;\n      newSource = newSource || newProps.content;\n      oldSource = newSource && !oldSource ? this.props.content : oldSource;\n\n      if (newSource && newSource !== oldSource && (newProps.file && newProps.file !== this.props.file || newProps.content && newProps.content !== this.props.content || newDocInit && newDocInit !== docInit || newDocInit && docInit && newDocInit.url !== docInit.url)) {\n        this.loadPDFDocument(newProps);\n      }\n\n      if (pdf && (newProps.page && newProps.page !== this.props.page || newProps.scale && newProps.scale !== this.props.scale || newProps.rotate && newProps.rotate !== this.props.rotate)) {\n        this.setState({ page: null });\n        pdf.getPage(newProps.page).then(this.onPageComplete);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var pdf = this.state.pdf;\n\n      if (pdf) {\n        pdf.destroy();\n      }\n      if (this.documentPromise) {\n        this.documentPromise.cancel();\n      }\n    }\n  }, {\n    key: 'onGetPdfRaw',\n    value: function onGetPdfRaw(pdfRaw) {\n      var _props = this.props,\n          onContentAvailable = _props.onContentAvailable,\n          onBinaryContentAvailable = _props.onBinaryContentAvailable,\n          binaryToBase64 = _props.binaryToBase64;\n\n      if (typeof onBinaryContentAvailable === 'function') {\n        onBinaryContentAvailable(pdfRaw);\n      }\n      if (typeof onContentAvailable === 'function') {\n        var convertBinaryToBase64 = this.defaultBinaryToBase64;\n        if (typeof binaryToBase64 === 'function') {\n          convertBinaryToBase64 = binaryToBase64;\n        }\n        onContentAvailable(convertBinaryToBase64(pdfRaw));\n      }\n    }\n  }, {\n    key: 'onDocumentComplete',\n    value: function onDocumentComplete(pdf) {\n      this.setState({ pdf: pdf });\n      var _props2 = this.props,\n          onDocumentComplete = _props2.onDocumentComplete,\n          onContentAvailable = _props2.onContentAvailable,\n          onBinaryContentAvailable = _props2.onBinaryContentAvailable;\n\n      if (typeof onDocumentComplete === 'function') {\n        onDocumentComplete(pdf.numPages);\n      }\n      if (typeof onContentAvailable === 'function' || typeof onBinaryContentAvailable === 'function') {\n        pdf.getData().then(this.onGetPdfRaw);\n      }\n      pdf.getPage(this.props.page).then(this.onPageComplete);\n    }\n  }, {\n    key: 'onPageComplete',\n    value: function onPageComplete(page) {\n      this.setState({ page: page });\n      this.renderPdf();\n      var onPageComplete = this.props.onPageComplete;\n\n      if (typeof onPageComplete === 'function') {\n        onPageComplete(page.pageIndex + 1);\n      }\n    }\n  }, {\n    key: 'getDocument',\n    value: function getDocument(val) {\n      if (this.documentPromise) {\n        this.documentPromise.cancel();\n      }\n      this.documentPromise = makeCancelable(window.PDFJS.getDocument(val).promise);\n      this.documentPromise.promise.then(this.onDocumentComplete).catch(this.onDocumentError);\n      return this.documentPromise;\n    }\n  }, {\n    key: 'loadByteArray',\n    value: function loadByteArray(byteArray) {\n      this.getDocument(byteArray);\n    }\n  }, {\n    key: 'loadPDFDocument',\n    value: function loadPDFDocument(props) {\n      var _this2 = this;\n\n      if (props.file) {\n        if (typeof props.file === 'string') {\n          return this.getDocument(props.file);\n        }\n        // Is a File object\n        var reader = new FileReader();\n        reader.onloadend = function () {\n          return _this2.loadByteArray(new Uint8Array(reader.result));\n        };\n        reader.readAsArrayBuffer(props.file);\n      } else if (props.binaryContent) {\n        this.loadByteArray(props.binaryContent);\n      } else if (props.content) {\n        var bytes = window.atob(props.content);\n        var byteLength = bytes.length;\n        var byteArray = new Uint8Array(new ArrayBuffer(byteLength));\n        for (var index = 0; index < byteLength; index += 1) {\n          byteArray[index] = bytes.charCodeAt(index);\n        }\n        this.loadByteArray(byteArray);\n      } else if (props.documentInitParameters) {\n        return this.getDocument(props.documentInitParameters);\n      } else {\n        throw new Error('react-pdf-js works with a file(URL) or (base64)content. At least one needs to be provided!');\n      }\n    }\n  }, {\n    key: 'renderPdf',\n    value: function renderPdf() {\n      var page = this.state.page;\n\n      if (page) {\n        var canvas = this.canvas;\n\n        var canvasContext = canvas.getContext('2d');\n        var _props3 = this.props,\n            scale = _props3.scale,\n            rotate = _props3.rotate;\n\n        var viewport = page.getViewport(scale, rotate);\n        canvas.height = viewport.height;\n        canvas.width = viewport.width;\n        page.render({ canvasContext: canvasContext, viewport: viewport });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var loading = this.props.loading;\n      var page = this.state.page;\n\n      return page ? _react2.default.createElement('canvas', {\n        ref: function ref(c) {\n          _this3.canvas = c;\n        },\n        className: this.props.className,\n        style: this.props.style\n      }) : loading || _react2.default.createElement(\n        'div',\n        null,\n        'Loading PDF...'\n      );\n    }\n  }]);\n  return Pdf;\n}(_react2.default.Component);\n\nPdf.propTypes = {\n  content: _propTypes2.default.string,\n  documentInitParameters: _propTypes2.default.shape({\n    url: _propTypes2.default.string\n  }),\n  binaryContent: _propTypes2.default.shape({\n    data: _propTypes2.default.any\n  }),\n  file: _propTypes2.default.any, // Could be File object or URL string.\n  loading: _propTypes2.default.any,\n  page: _propTypes2.default.number,\n  scale: _propTypes2.default.number,\n  rotate: _propTypes2.default.number,\n  onContentAvailable: _propTypes2.default.func,\n  onBinaryContentAvailable: _propTypes2.default.func,\n  binaryToBase64: _propTypes2.default.func,\n  onDocumentComplete: _propTypes2.default.func,\n  onPageComplete: _propTypes2.default.func,\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object\n};\nPdf.defaultProps = {\n  page: 1,\n  scale: 1.0\n};\n\n\nPdf.displayName = 'react-pdf-js';\n\nexports.default = Pdf;\n\nfunction _inspect(input, depth) {\n  var maxDepth = 4;\n  var maxKeys = 15;\n\n  if (depth === undefined) {\n    depth = 0;\n  }\n\n  depth += 1;\n\n  if (input === null) {\n    return 'null';\n  } else if (input === undefined) {\n    return 'void';\n  } else if (typeof input === 'string' || typeof input === 'number' || typeof input === 'boolean') {\n    return typeof input === 'undefined' ? 'undefined' : (0, _typeof3.default)(input);\n  } else if (Array.isArray(input)) {\n    if (input.length > 0) {\n      if (depth > maxDepth) return '[...]';\n\n      var first = _inspect(input[0], depth);\n\n      if (input.every(function (item) {\n        return _inspect(item, depth) === first;\n      })) {\n        return first.trim() + '[]';\n      } else {\n        return '[' + input.slice(0, maxKeys).map(function (item) {\n          return _inspect(item, depth);\n        }).join(', ') + (input.length >= maxKeys ? ', ...' : '') + ']';\n      }\n    } else {\n      return 'Array';\n    }\n  } else {\n    var keys = (0, _keys2.default)(input);\n\n    if (!keys.length) {\n      if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {\n        return input.constructor.name;\n      } else {\n        return 'Object';\n      }\n    }\n\n    if (depth > maxDepth) return '{...}';\n    var indent = '  '.repeat(depth - 1);\n    var entries = keys.slice(0, maxKeys).map(function (key) {\n      return (/^([A-Z_$][A-Z0-9_$]*)$/i.test(key) ? key : (0, _stringify2.default)(key)) + ': ' + _inspect(input[key], depth) + ';';\n    }).join('\\n  ' + indent);\n\n    if (keys.length >= maxKeys) {\n      entries += '\\n  ' + indent + '...';\n    }\n\n    if (input.constructor && input.constructor.name && input.constructor.name !== 'Object') {\n      return input.constructor.name + ' {\\n  ' + indent + entries + '\\n' + indent + '}';\n    } else {\n      return '{\\n  ' + indent + entries + '\\n' + indent + '}';\n    }\n  }\n}","/home/travis/build/npmtest/node-npmtest-react-pdf-js/node_modules/react-pdf-js/src/index.js":"import Pdf from './Pdf';\n\nexport default Pdf;\n"}